// <auto-generated />
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace API.Migrations
{
    [DbContext(typeof(DNDDbContext))]
    [Migration("20210226074749_Initials")]
    partial class Initials
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("API.Models.Character", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CharacterName")
                        .HasColumnType("text");

                    b.Property<string>("Class")
                        .HasColumnType("text");

                    b.Property<string>("Race")
                        .HasColumnType("text");

                    b.HasKey("Ref");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("API.Models.CharacterApperance", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Age")
                        .HasColumnType("text");

                    b.Property<int>("CharacterRef")
                        .HasColumnType("integer");

                    b.Property<string>("Eyes")
                        .HasColumnType("text");

                    b.Property<string>("Hair")
                        .HasColumnType("text");

                    b.Property<string>("Height")
                        .HasColumnType("text");

                    b.Property<string>("Size")
                        .HasColumnType("text");

                    b.Property<string>("Skin")
                        .HasColumnType("text");

                    b.Property<string>("Weight")
                        .HasColumnType("text");

                    b.HasKey("Ref");

                    b.ToTable("CharacterApperance");
                });

            modelBuilder.Entity("API.Models.CharacterDescriptionDetails", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alignment")
                        .HasColumnType("text");

                    b.Property<string>("Allies")
                        .HasColumnType("text");

                    b.Property<string>("Backstory")
                        .HasColumnType("text");

                    b.Property<string>("Bonds")
                        .HasColumnType("text");

                    b.Property<int>("CharacterRef")
                        .HasColumnType("integer");

                    b.Property<string>("Faith")
                        .HasColumnType("text");

                    b.Property<string>("Flaws")
                        .HasColumnType("text");

                    b.Property<string>("Ideals")
                        .HasColumnType("text");

                    b.Property<string>("PersonalityTraits")
                        .HasColumnType("text");

                    b.HasKey("Ref");

                    b.ToTable("CharacterDescriptionDetails");
                });

            modelBuilder.Entity("API.Models.CharacterEquipments", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CharacterRef")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<int>("EquipmentRef")
                        .HasColumnType("integer");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("boolean");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Ref");

                    b.ToTable("CharacterEquipments");
                });

            modelBuilder.Entity("API.Models.CharacterMainStats", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Armor")
                        .HasColumnType("integer");

                    b.Property<int>("CharacterRef")
                        .HasColumnType("integer");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<int>("Initiative")
                        .HasColumnType("integer");

                    b.Property<bool>("Inspiration")
                        .HasColumnType("boolean");

                    b.Property<int>("MaxHealth")
                        .HasColumnType("integer");

                    b.Property<int>("Profiency")
                        .HasColumnType("integer");

                    b.Property<int>("Speed")
                        .HasColumnType("integer");

                    b.HasKey("Ref");

                    b.ToTable("CharacterMainStats");
                });

            modelBuilder.Entity("API.Models.CharacterMoney", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CharacterRef")
                        .HasColumnType("integer");

                    b.Property<int>("Copper")
                        .HasColumnType("integer");

                    b.Property<int>("Gold")
                        .HasColumnType("integer");

                    b.Property<int>("Silver")
                        .HasColumnType("integer");

                    b.HasKey("Ref");

                    b.ToTable("CharacterMoney");
                });

            modelBuilder.Entity("API.Models.CharacterSavingThrows", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CharacterRef")
                        .HasColumnType("integer");

                    b.Property<int>("Charisma")
                        .HasColumnType("integer");

                    b.Property<int>("Constitution")
                        .HasColumnType("integer");

                    b.Property<int>("Dexterity")
                        .HasColumnType("integer");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("Wisdom")
                        .HasColumnType("integer");

                    b.HasKey("Ref");

                    b.ToTable("CharacterSavingThrows");
                });

            modelBuilder.Entity("API.Models.CharacterSecondaryStats", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CharacterRef")
                        .HasColumnType("integer");

                    b.Property<int>("Charisma")
                        .HasColumnType("integer");

                    b.Property<int>("Constitution")
                        .HasColumnType("integer");

                    b.Property<int>("Dexterity")
                        .HasColumnType("integer");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("Wisdom")
                        .HasColumnType("integer");

                    b.HasKey("Ref");

                    b.ToTable("CharacterSecondaryStats");
                });

            modelBuilder.Entity("API.Models.CharacterSkills", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Acrobatics")
                        .HasColumnType("integer");

                    b.Property<int>("AnimalHandling")
                        .HasColumnType("integer");

                    b.Property<int>("Arcana")
                        .HasColumnType("integer");

                    b.Property<int>("Athletics")
                        .HasColumnType("integer");

                    b.Property<int>("CharacterRef")
                        .HasColumnType("integer");

                    b.Property<int>("Deception")
                        .HasColumnType("integer");

                    b.Property<int>("History")
                        .HasColumnType("integer");

                    b.Property<int>("Insight")
                        .HasColumnType("integer");

                    b.Property<int>("Intimidation")
                        .HasColumnType("integer");

                    b.Property<int>("Investigation")
                        .HasColumnType("integer");

                    b.Property<int>("Medicine")
                        .HasColumnType("integer");

                    b.Property<int>("Nature")
                        .HasColumnType("integer");

                    b.Property<int>("Perception")
                        .HasColumnType("integer");

                    b.Property<int>("Performance")
                        .HasColumnType("integer");

                    b.Property<int>("Persuasion")
                        .HasColumnType("integer");

                    b.Property<int>("Religion")
                        .HasColumnType("integer");

                    b.Property<int>("SleightOfHand")
                        .HasColumnType("integer");

                    b.Property<int>("Stealth")
                        .HasColumnType("integer");

                    b.Property<int>("Survival")
                        .HasColumnType("integer");

                    b.HasKey("Ref");

                    b.ToTable("CharacterSkills");
                });

            modelBuilder.Entity("API.Models.CharacterSpells", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CharacterRef")
                        .HasColumnType("integer");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<int>("Hit")
                        .HasColumnType("integer");

                    b.Property<int>("SpellRef")
                        .HasColumnType("integer");

                    b.HasKey("Ref");

                    b.ToTable("CharacterSpells");
                });

            modelBuilder.Entity("API.Models.Equipments.Equipment", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EquipmentName")
                        .HasColumnType("text");

                    b.Property<int>("HasIcon")
                        .HasColumnType("integer");

                    b.HasKey("Ref");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("API.Models.Equipments.Spell", b =>
                {
                    b.Property<int>("Ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ActionTime")
                        .HasColumnType("integer");

                    b.Property<string>("CastType")
                        .HasColumnType("text");

                    b.Property<string>("Components")
                        .HasColumnType("text");

                    b.Property<int>("DamageBase")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<double>("Duration")
                        .HasColumnType("double precision");

                    b.Property<int>("HitBase")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("Range")
                        .HasColumnType("integer");

                    b.Property<string>("SpellName")
                        .HasColumnType("text");

                    b.HasKey("Ref");

                    b.ToTable("Spells");
                });
#pragma warning restore 612, 618
        }
    }
}
